Структура csv-файлов:
Кодировка - Unicode UTF-8, разделитель полей - точка с запятой (;).
Для каждой торговой точки, указанного в файле конфигурации, создается отдельный файл.

Перечень и описание столбцов csv-файла с результатом парсинга:
    1. parser_id - id парсера. Значение берется из конфига.
    2. chain_id - id сети. Значение берется из конфига.
    3. tt_id - id торговой точки. Значение берется из конфига.
    4. tt_region - Регион торговой точки.
    5. tt_name - Название сети (chain_name) с указанием адреса в скобках. Пример: 
“Globus (Московская обл., Новорижское ш., 22-й км, вл. 1, стр. 1)”.
Адрес не должен содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («»), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".
    6. price_datetime - Дата и время сбора данных по товару в формате ГГГГ-ММ-ДД ЧЧ:ММ:СС. Дата и время разделяются пробелом. Пример: 2020-05-19 09:29:13.
    7. price - Регулярная цена. Числовой формат данных, целые числа указываем без лишних нулей после запятой. Пример: не 175.0, а 175; не 186.50, а 186.5. Если цифр после запятой больше двух, то применяем математическое округление. Значение не должно быть нулевым. Между цифрами не должно быть пробелов (пример: 5 000). Если есть “price_promo”, то нужна проверка, что “price” > “price_promo”, иначе обе цены не записываем.
    8. price_promo - Акционная цена. Числовой формат данных, целые числа указываем без знаков после запятой. Пример: не 175.0, а 175. Дробные значения указываем с 2 цифрами после запятой с математический округленем. Значение не должно быть нулевым. Между цифрами не должно быть пробелов (пример: 5 000).
    9. price_card - Цена по карте.
    10. price_card_promo - Промо цена по карте.
    11. promo_start_date - Дата начала акции. Заполняем, если есть промо-цена. Формат "2020-05-19 00:00:00" Если в источнике указана только дата, дописываем время "00:00:00".
    12. promo_end_date - Дата окончания акции. Заполняем, если есть промо-цена. Формат "2020-05-19 23:59:59" Если в источнике указана только дата, дописываем время "23:59:59".
    13. promo_type - Тип промо.
    14. in_stock - Количество товара в наличии в магазине.
    15. sku_status - 1/0 - наличие товара в ТТ.
    16. sku_barcode - Штрихкод товара. Если их несколько, дублируем строку для каждого из них
    17. sku_article - Артикул товара. Не записывать в результат парсинга товары, у которых совпадает и артикул, и штрихкод с уже найденными товарами.
    18. sku_name - Наименование товара. Не должен содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".
    19. sku_category - Цепочка категорий товара в каталоге от родительских к дочерним. Например: “Молоко, сыр, яйца|Молоко, сливки”, . Не должен содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".
    20. + sku_brand - бренд. Не должен содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".
    21. + sku_country - страна. Не должен содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".
    22. + sku_manufacturer - производитель. Не должен содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".
    23. + sku_package - название упаковки. Не должен содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".
    24. + sku_packed - тип товара: 0 = весовой (цена за кг/л) / 1 = фасованный (у которого есть вес или объём упаковки) / 2 = штучный (измеряется в штуках вес/объём которых не влияет на цену, например, яйцо, сковорода, салфетки и т.д. в основном нонфуд). 
    25. + sku_weight_min - масса. Нужно собирать в граммах (Если значение параметра целое, то не должно быть знаков после запятой, например: 1000.0)
Конструкции с умножением, сложением вида “8х100” или “8*100” преобразуем из выражения в значение “800”.
    26. + sku_volume_min - объем. Нужно собирать в миллилитрах. (Если значение параметра целое, то не должно быть знаков после запятой, например: 900.0)
Конструкции с умножением, сложением вида “8х100” или “8*100” преобразуем из выражения в значение “800”.
    27. + sku_quantity_min - количество единиц, например, 100 салфеток в пачке. Нужно собирать в штуках. (Если значение параметра целое, то не должно быть знаков после запятой, например: 3.0) Не путать с параметром in_stock.
    28. + sku_fat_min - Жирность в %. Не путать с % жиров на 100г. При наличии диапазона значений (жирность 3.2-3.5) разделяем их на столбцы (sku_fat_min, sku_fat_max).
    29. + sku_alcohol_min - Крепость в %. При наличии диапазона значений (жирность 3.2-3.5) разделяем их на столбцы (sku_fat_min, sku_fat_max).
    30. sku_link - ссылка на товар в интернет-магазине. Собираем без лишних параметров, в максимально лаконичном виде.
    31. api_link - ссылка на api товара. Собираем без лишних параметров, в максимально лаконичном виде.
    32.  sku_parameters_json - характеристики товара. Весь массив характеристик записываем в столбец sku_parameters_json в формате JSON: {“title”: “value”}.
Пример: {"Калорийность": "173", "Белки на 100 г, г": "14", "Жиры на 100 г, г": "13", "Масса нетто, кг": "0.6", "Масса брутто, кг": "0.6", "Ингредиенты": "Шеи охлажденные из цыплят-бройлеров", "ДxШxВ, мм": "190x150x50", "Производитель": "ООО Птицефабрика Элинар-Бройлер", "Страна производства": "РОССИЯ"} 
Значения не должны содержать символов неразрывного пробела "&nbsp", перевода строки (\n), разделителей ";", кавычек ("), кавычек-ёлочек («), бэкслеш кавычек (\”), используемых в csv. Точку с запятой заменить на запятую. Итоговое значение целиком заключаем в кавычки "".  
    33. sku_images - Прямые ссылки на каждую фотографию товара. Разделитель между ссылками (если фотографий несколько) — “|”.
    34. server_ip - Адрес сервера, на котором отработал парсер.
    35. parser_date - Дата-время обновления файла parser.py.
    36. models_date - Дата-время обновления файла models.py.
    37. promodata - В каждой строке файла пишем слово “promodata”.

